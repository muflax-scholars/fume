#!/usr/bin/env ruby

# Simple script to get old fume data and send it to beeminder. Put it in a daily
# cron job. Pay for dreeves' hookers.

require "chronic"
require "trollop"

# load library
file = File.symlink?(__FILE__) ? File.readlink(__FILE__) : __FILE__
lib = File.join File.dirname(file), "/../lib/fume"

if File.exists? lib
  # using local version
  require lib
else
  require 'fume'
end

# load configs
opts = Trollop::options do
  banner "usage: fume-beeminder [opts]"

  opt :force,   "force update (ignores margin)"
  opt :debug,   "debug mode"
  opt :pretend, "pretend to send data"
  opt :margin,  "only consider items at least that old", :type => :string, :default => "1 hour ago"
end

puts "loading fume data..." if opts[:debug]
bee = Fume::Bee.new
bee.init

puts "getting unreported entries..." if opts[:debug]
margin  = opts[:force] ? "now" : opts[:margin]
entries = bee.unreported_entries margin

if entries.empty?
  puts "nothing to do..." if opts[:debug]
  exit
else
  puts "found #{entries.count} entries..." if opts[:debug]
end

data = bee.build_data entries

if data.empty?
  puts "nothing to update (yet)..." if opts[:debug]
  exit
end

# send data
if opts[:pretend]
  puts "would send:"
  data.each do |goal, body|
    puts body
  end
else
  bee.send data
end

# save data
puts "saving..." if opts[:debug]
bee.mark_entries_reported entries unless opts[:pretend]
